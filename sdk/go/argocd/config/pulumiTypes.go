// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-argocd/sdk/go/argocd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Kubernetes struct {
	// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
	ClientKey *string `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
	ConfigContext         *string `pulumi:"configContext"`
	ConfigContextAuthInfo *string `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string `pulumi:"configContextCluster"`
	// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
	Exec *KubernetesExec `pulumi:"exec"`
	// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
	Host *string `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
	Insecure *bool `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
	Password *string `pulumi:"password"`
	// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
	Token *string `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
	Username *string `pulumi:"username"`
}

// KubernetesInput is an input type that accepts KubernetesArgs and KubernetesOutput values.
// You can construct a concrete instance of `KubernetesInput` via:
//
//	KubernetesArgs{...}
type KubernetesInput interface {
	pulumi.Input

	ToKubernetesOutput() KubernetesOutput
	ToKubernetesOutputWithContext(context.Context) KubernetesOutput
}

type KubernetesArgs struct {
	// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
	ConfigContext         pulumi.StringPtrInput `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput `pulumi:"configContextCluster"`
	// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
	Exec KubernetesExecPtrInput `pulumi:"exec"`
	// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (i KubernetesArgs) ToKubernetesOutput() KubernetesOutput {
	return i.ToKubernetesOutputWithContext(context.Background())
}

func (i KubernetesArgs) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOutput)
}

type KubernetesOutput struct{ *pulumi.OutputState }

func (KubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (o KubernetesOutput) ToKubernetesOutput() KubernetesOutput {
	return o
}

func (o KubernetesOutput) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return o
}

// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
func (o KubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
func (o KubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
func (o KubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
func (o KubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o KubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o KubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
func (o KubernetesOutput) Exec() KubernetesExecPtrOutput {
	return o.ApplyT(func(v Kubernetes) *KubernetesExec { return v.Exec }).(KubernetesExecPtrOutput)
}

// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
func (o KubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
func (o KubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Kubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
func (o KubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
func (o KubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
func (o KubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesExec struct {
	// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
	ApiVersion string `pulumi:"apiVersion"`
	// Map of environment variables to set when executing the plugin.
	Args []string `pulumi:"args"`
	// Command to execute.
	Command string `pulumi:"command"`
	// List of arguments to pass when executing the plugin.
	Env map[string]string `pulumi:"env"`
}

// KubernetesExecInput is an input type that accepts KubernetesExecArgs and KubernetesExecOutput values.
// You can construct a concrete instance of `KubernetesExecInput` via:
//
//	KubernetesExecArgs{...}
type KubernetesExecInput interface {
	pulumi.Input

	ToKubernetesExecOutput() KubernetesExecOutput
	ToKubernetesExecOutputWithContext(context.Context) KubernetesExecOutput
}

type KubernetesExecArgs struct {
	// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Map of environment variables to set when executing the plugin.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Command to execute.
	Command pulumi.StringInput `pulumi:"command"`
	// List of arguments to pass when executing the plugin.
	Env pulumi.StringMapInput `pulumi:"env"`
}

func (KubernetesExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesExec)(nil)).Elem()
}

func (i KubernetesExecArgs) ToKubernetesExecOutput() KubernetesExecOutput {
	return i.ToKubernetesExecOutputWithContext(context.Background())
}

func (i KubernetesExecArgs) ToKubernetesExecOutputWithContext(ctx context.Context) KubernetesExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecOutput)
}

func (i KubernetesExecArgs) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return i.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (i KubernetesExecArgs) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecOutput).ToKubernetesExecPtrOutputWithContext(ctx)
}

// KubernetesExecPtrInput is an input type that accepts KubernetesExecArgs, KubernetesExecPtr and KubernetesExecPtrOutput values.
// You can construct a concrete instance of `KubernetesExecPtrInput` via:
//
//	        KubernetesExecArgs{...}
//
//	or:
//
//	        nil
type KubernetesExecPtrInput interface {
	pulumi.Input

	ToKubernetesExecPtrOutput() KubernetesExecPtrOutput
	ToKubernetesExecPtrOutputWithContext(context.Context) KubernetesExecPtrOutput
}

type kubernetesExecPtrType KubernetesExecArgs

func KubernetesExecPtr(v *KubernetesExecArgs) KubernetesExecPtrInput {
	return (*kubernetesExecPtrType)(v)
}

func (*kubernetesExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesExec)(nil)).Elem()
}

func (i *kubernetesExecPtrType) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return i.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (i *kubernetesExecPtrType) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecPtrOutput)
}

type KubernetesExecOutput struct{ *pulumi.OutputState }

func (KubernetesExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesExec)(nil)).Elem()
}

func (o KubernetesExecOutput) ToKubernetesExecOutput() KubernetesExecOutput {
	return o
}

func (o KubernetesExecOutput) ToKubernetesExecOutputWithContext(ctx context.Context) KubernetesExecOutput {
	return o
}

func (o KubernetesExecOutput) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return o.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (o KubernetesExecOutput) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesExec) *KubernetesExec {
		return &v
	}).(KubernetesExecPtrOutput)
}

// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
func (o KubernetesExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Map of environment variables to set when executing the plugin.
func (o KubernetesExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Command to execute.
func (o KubernetesExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesExec) string { return v.Command }).(pulumi.StringOutput)
}

// List of arguments to pass when executing the plugin.
func (o KubernetesExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type KubernetesExecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesExec)(nil)).Elem()
}

func (o KubernetesExecPtrOutput) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return o
}

func (o KubernetesExecPtrOutput) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return o
}

func (o KubernetesExecPtrOutput) Elem() KubernetesExecOutput {
	return o.ApplyT(func(v *KubernetesExec) KubernetesExec {
		if v != nil {
			return *v
		}
		var ret KubernetesExec
		return ret
	}).(KubernetesExecOutput)
}

// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
func (o KubernetesExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Map of environment variables to set when executing the plugin.
func (o KubernetesExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Command to execute.
func (o KubernetesExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// List of arguments to pass when executing the plugin.
func (o KubernetesExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesInput)(nil)).Elem(), KubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesExecInput)(nil)).Elem(), KubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesExecPtrInput)(nil)).Elem(), KubernetesExecArgs{})
	pulumi.RegisterOutputType(KubernetesOutput{})
	pulumi.RegisterOutputType(KubernetesExecOutput{})
	pulumi.RegisterOutputType(KubernetesExecPtrOutput{})
}
