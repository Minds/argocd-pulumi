// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd
{
    /// <summary>
    /// Manages [application sets](https://argo-cd.readthedocs.io/en/stable/user-guide/application-set/) within ArgoCD.
    /// </summary>
    [ArgocdResourceType("argocd:index/applicationSet:ApplicationSet")]
    public partial class ApplicationSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Kubernetes object metadata for templated Application.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.ApplicationSetMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// The application specification.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.ApplicationSetSpec> Spec { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationSet(string name, ApplicationSetArgs args, CustomResourceOptions? options = null)
            : base("argocd:index/applicationSet:ApplicationSet", name, args ?? new ApplicationSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationSet(string name, Input<string> id, ApplicationSetState? state = null, CustomResourceOptions? options = null)
            : base("argocd:index/applicationSet:ApplicationSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationSet Get(string name, Input<string> id, ApplicationSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationSet(name, id, state, options);
        }
    }

    public sealed class ApplicationSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Kubernetes object metadata for templated Application.
        /// </summary>
        [Input("metadata", required: true)]
        public Input<Inputs.ApplicationSetMetadataArgs> Metadata { get; set; } = null!;

        /// <summary>
        /// The application specification.
        /// </summary>
        [Input("spec", required: true)]
        public Input<Inputs.ApplicationSetSpecArgs> Spec { get; set; } = null!;

        public ApplicationSetArgs()
        {
        }
        public static new ApplicationSetArgs Empty => new ApplicationSetArgs();
    }

    public sealed class ApplicationSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Kubernetes object metadata for templated Application.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.ApplicationSetMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// The application specification.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.ApplicationSetSpecGetArgs>? Spec { get; set; }

        public ApplicationSetState()
        {
        }
        public static new ApplicationSetState Empty => new ApplicationSetState();
    }
}
