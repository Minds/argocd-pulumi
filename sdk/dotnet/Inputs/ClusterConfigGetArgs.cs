// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd.Inputs
{

    public sealed class ClusterConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAuthConfigs")]
        private InputList<Inputs.ClusterConfigAwsAuthConfigGetArgs>? _awsAuthConfigs;
        public InputList<Inputs.ClusterConfigAwsAuthConfigGetArgs> AwsAuthConfigs
        {
            get => _awsAuthConfigs ?? (_awsAuthConfigs = new InputList<Inputs.ClusterConfigAwsAuthConfigGetArgs>());
            set => _awsAuthConfigs = value;
        }

        [Input("bearerToken")]
        private Input<string>? _bearerToken;

        /// <summary>
        /// Server requires Bearer authentication. The client will not attempt to use refresh tokens for an OAuth2 flow.
        /// </summary>
        public Input<string>? BearerToken
        {
            get => _bearerToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bearerToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Configuration for an exec provider used to call an external command to perform cluster authentication See: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig.
        /// </summary>
        [Input("execProviderConfig")]
        public Input<Inputs.ClusterConfigExecProviderConfigGetArgs>? ExecProviderConfig { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Password for servers that require Basic authentication.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Settings to enable transport layer security when connecting to the cluster.
        /// </summary>
        [Input("tlsClientConfig")]
        public Input<Inputs.ClusterConfigTlsClientConfigGetArgs>? TlsClientConfig { get; set; }

        /// <summary>
        /// Username for servers that require Basic authentication.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ClusterConfigGetArgs()
        {
        }
        public static new ClusterConfigGetArgs Empty => new ClusterConfigGetArgs();
    }
}
