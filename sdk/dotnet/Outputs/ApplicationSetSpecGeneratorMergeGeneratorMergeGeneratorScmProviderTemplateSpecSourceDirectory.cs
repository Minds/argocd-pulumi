// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd.Outputs
{

    [OutputType]
    public sealed class ApplicationSetSpecGeneratorMergeGeneratorMergeGeneratorScmProviderTemplateSpecSourceDirectory
    {
        /// <summary>
        /// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
        /// </summary>
        public readonly string? Exclude;
        /// <summary>
        /// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
        /// </summary>
        public readonly string? Include;
        /// <summary>
        /// Jsonnet specific options.
        /// </summary>
        public readonly Outputs.ApplicationSetSpecGeneratorMergeGeneratorMergeGeneratorScmProviderTemplateSpecSourceDirectoryJsonnet? Jsonnet;
        /// <summary>
        /// Whether to scan a directory recursively for manifests.
        /// </summary>
        public readonly bool? Recurse;

        [OutputConstructor]
        private ApplicationSetSpecGeneratorMergeGeneratorMergeGeneratorScmProviderTemplateSpecSourceDirectory(
            string? exclude,

            string? include,

            Outputs.ApplicationSetSpecGeneratorMergeGeneratorMergeGeneratorScmProviderTemplateSpecSourceDirectoryJsonnet? jsonnet,

            bool? recurse)
        {
            Exclude = exclude;
            Include = include;
            Jsonnet = jsonnet;
            Recurse = recurse;
        }
    }
}
