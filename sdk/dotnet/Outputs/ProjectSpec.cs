// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd.Outputs
{

    [OutputType]
    public sealed class ProjectSpec
    {
        /// <summary>
        /// Blacklisted cluster level resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecClusterResourceBlacklist> ClusterResourceBlacklists;
        /// <summary>
        /// Whitelisted cluster level resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecClusterResourceWhitelist> ClusterResourceWhitelists;
        /// <summary>
        /// Project description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Destinations available for deployment.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecDestination> Destinations;
        /// <summary>
        /// Blacklisted namespace level resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecNamespaceResourceBlacklist> NamespaceResourceBlacklists;
        /// <summary>
        /// Whitelisted namespace level resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecNamespaceResourceWhitelist> NamespaceResourceWhitelists;
        /// <summary>
        /// Settings specifying if controller should monitor orphaned resources of apps in this project.
        /// </summary>
        public readonly Outputs.ProjectSpecOrphanedResources? OrphanedResources;
        /// <summary>
        /// User defined RBAC roles associated with this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecRole> Roles;
        /// <summary>
        /// List of PGP key IDs that commits in Git must be signed with in order to be allowed for sync.
        /// </summary>
        public readonly ImmutableArray<string> SignatureKeys;
        /// <summary>
        /// List of namespaces that application resources are allowed to be created in.
        /// </summary>
        public readonly ImmutableArray<string> SourceNamespaces;
        /// <summary>
        /// List of repository URLs which can be used for deployment. Can be set to `["*"]` to allow all configured repositories configured in ArgoCD.
        /// </summary>
        public readonly ImmutableArray<string> SourceRepos;
        /// <summary>
        /// Settings controlling when syncs can be run for apps in this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectSpecSyncWindow> SyncWindows;

        [OutputConstructor]
        private ProjectSpec(
            ImmutableArray<Outputs.ProjectSpecClusterResourceBlacklist> clusterResourceBlacklists,

            ImmutableArray<Outputs.ProjectSpecClusterResourceWhitelist> clusterResourceWhitelists,

            string? description,

            ImmutableArray<Outputs.ProjectSpecDestination> destinations,

            ImmutableArray<Outputs.ProjectSpecNamespaceResourceBlacklist> namespaceResourceBlacklists,

            ImmutableArray<Outputs.ProjectSpecNamespaceResourceWhitelist> namespaceResourceWhitelists,

            Outputs.ProjectSpecOrphanedResources? orphanedResources,

            ImmutableArray<Outputs.ProjectSpecRole> roles,

            ImmutableArray<string> signatureKeys,

            ImmutableArray<string> sourceNamespaces,

            ImmutableArray<string> sourceRepos,

            ImmutableArray<Outputs.ProjectSpecSyncWindow> syncWindows)
        {
            ClusterResourceBlacklists = clusterResourceBlacklists;
            ClusterResourceWhitelists = clusterResourceWhitelists;
            Description = description;
            Destinations = destinations;
            NamespaceResourceBlacklists = namespaceResourceBlacklists;
            NamespaceResourceWhitelists = namespaceResourceWhitelists;
            OrphanedResources = orphanedResources;
            Roles = roles;
            SignatureKeys = signatureKeys;
            SourceNamespaces = sourceNamespaces;
            SourceRepos = sourceRepos;
            SyncWindows = syncWindows;
        }
    }
}
