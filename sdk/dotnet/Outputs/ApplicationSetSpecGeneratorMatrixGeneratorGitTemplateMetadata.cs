// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd.Outputs
{

    [OutputType]
    public sealed class ApplicationSetSpecGeneratorMatrixGeneratorGitTemplateMetadata
    {
        /// <summary>
        /// An unstructured key value map stored with the applicationsets.argoproj.io that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Annotations;
        /// <summary>
        /// List of finalizers to apply to the resulting Application.
        /// </summary>
        public readonly ImmutableArray<string> Finalizers;
        /// <summary>
        /// Map of string keys and values that can be used to organize and categorize (scope and select) the applicationsets.argoproj.io. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// Name of the applicationsets.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Namespace of the applicationsets.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
        /// </summary>
        public readonly string? Namespace;

        [OutputConstructor]
        private ApplicationSetSpecGeneratorMatrixGeneratorGitTemplateMetadata(
            ImmutableDictionary<string, string>? annotations,

            ImmutableArray<string> finalizers,

            ImmutableDictionary<string, string>? labels,

            string? name,

            string? @namespace)
        {
            Annotations = annotations;
            Finalizers = finalizers;
            Labels = labels;
            Name = name;
            Namespace = @namespace;
        }
    }
}
